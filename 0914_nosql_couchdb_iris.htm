<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="bc.css">
</head>

<h3>Relax &ndash; Simple Free Cloud Based Data Repository with NoSQL, CouchDB, and IrisCouch</h3>

<p>Last week, I mentioned my proposal for the Autodesk Technical Summit in June, to present a

<a href="http://thebuildingcoder.typepad.com/blog/2013/03/cloud-mobile-extensible-storage-data-use-in-schedules.html#3">
cloud-based round-trip 2D Revit model editing project</a>.

<p>That will obviously required a cloud-based data repository.
Talking with my colleagues, all of their suggestions were oriented towards the Microsoft Azure and Amazon solutions discussed so far on the

<a href="http://adndevblog.typepad.com/cloud_and_mobile">
cloud and mobile DevBlog</a>.</p>

<p>I was searching for something freer, more open source, and less proprietary, and was rather surprised to discover an utterly relaxing solution that so far looks absolutely perfect for me and my needs.</p>

<p>I first stumbled upon IrisCouch, which led me to CouchDB and NoSQL, which all make me very happy.
For didactical purposes, I will discuss them in inverted order, though.</p>

<p>Before I get to that, I would also like to mention my first ski tour of the year:</p>

<ul>
<li><a href="#2">Ski Tour Season Opening</a></li>
<li><a href="#3">NoSQL</a></li>
<li><a href="#4">CouchDB</a></li>
<li><a href="#5">IrisCouch</a></li>
<li><a href="#6">ID and GUID in Revit Documents</a></li>
<li><a href="#7">Visual Revit Programming with Dynamo</a></li>
</ul>


<a name="2"></a>

<h4>My Ski Tour Season Opening</h4>

<img src="file:///j/photo/jeremy/2013/2013-03-23_clariden/p1010311.jpg" alt="Jeremy on Clariden" width="200"/>

<p>I went on a ski crossing of the Glarner Alps last weekend.</p>

<p>We took the cable lift up to the Fisetenpass and climbed the Gemsfairenstock, Clariden and Piz Cazarauls.
We were hoping to get on to the Schärhorn as well, but had to give that up due to bad weather conditions.
Instead we headed over the glacier to the Chammlijoch und down the Iiswaendli back to the Klausenpass.

<p>This was my second ascent of the Clariden Mountain, following the

<a href="http://thebuildingcoder.typepad.com/blog/2011/09/revit-ifc-exporter-released-as-open-source.html">
last one</a> in

September 2011, from the opposite direction and obviously under very different conditions.

<p>A great way to get away from computers for a day or two and face the natural elements instead, at their wildest and fiercest.</p>



<a name="3"></a>

<h4>Relax &ndash; with NoSQL</h4>

<p>As said, researching a simple efficient cloud-based data repository for my

<a href="http://thebuildingcoder.typepad.com/blog/2013/03/cloud-mobile-extensible-storage-data-use-in-schedules.html#3">
SVG editing project</a>,

I discovered

<a href="http://en.wikipedia.org/wiki/NoSQL">
NoSQL</a>,

'not only SQL', a whole new class of database model, hitherto unknown to me.

<p>A NoSQL database provides a simple, lightweight mechanism for storage and retrieval of data that provides higher scalability and availability than traditional relational databases.
The NoSQL data stores use looser consistency models to achieve horizontal scaling and higher availability.
Some NoSQL systems do allow SQL-like query language to be used.

<p>NoSQL database systems are often highly optimized for retrieval and appending operations and often offer little functionality beyond record storage, e.g. key–value stores.
The reduced run-time flexibility compared to full SQL RDBM systems is compensated by marked gains in scalability and performance for certain data models.

<p>Since my application will only require storage of simple key-value pairs and should in theory be massively scalable, this sounds like an optimal choice.
In practice, I only expect it to be a toy, of course; the scalability is required only to make it a useful example toy.</p>



<a name="4"></a>

<h4>Relax &ndash; with CouchDB</h4>

<p><p><a href="http://couchdb.apache.org">
Apache CouchDB</a> is

a NoSQL implementation, one of a new breed of database management systems.

<p>As stated by its official by-line, the one word to describe CouchDB is relax.
When you start CouchDB, you see:

<pre>
Apache CouchDB has started. Time to relax.
</pre>

<p>CouchDB is built not only for, but <b>of</b> the Web.
Its design borrows heavily from web architecture and the concepts of resources, methods, and representations.
Data is self-contained:</p>

<center>
<img src="img/couchdb_01.png" alt="Self-contained documents" width="300"/>
</center>

<p>Replication and backup is extremely simple, basically requiring no more than a modification of the base URL.</p>

<p>CouchDB is implemented in the

<a href="http://www.erlang.org">
Erlang</a> programming

language, which is used to build massively scalable soft real-time systems with requirements on high availability with uses in telecommunication, banking, e-commerce, computer telephony and instant messaging.
Erlang's runtime system has built-in support for concurrency, distribution and fault tolerance.

<p>Here is a

<a href="http://couchapp.org/page/what-is-couchapp">'what is' Q&amp;A</a>,

<a href="http://net.tutsplus.com/tutorials/getting-started-with-couchdb">getting started tutorial</a> and

<!-- <a href="http://docs.couchone.com">documentation</a> -->

full 270-page O'Reilly textbook

<a href="http://guide.couchdb.org">
CouchDB &ndash; The Definite Guide</a>.

<p>The textbook samples make use of the

<a href="http://en.wikipedia.org/wiki/CURL">
cURL</a> command line tool, e.g. the following two command line statements to create a new and list a database:

<pre>
  curl -X PUT http://127.0.0.1:5984/baseball
  {"ok":true}

  curl -X GET http://127.0.0.1:5984/_all_dbs
  ["baseball"]
</pre>


<a name="5"></a>

<h4>Relax &ndash; with IrisCouch</h4>

<p>As I initially mentioned, the starting point of this exploration of mine was

<a href="http://www.iriscouch.com">
IrisCouch</a>,

which terms itself 'easy CouchDB'.
It provides a free hosting service, 'a couch in the cloud'.
You can sign up in minutes to have your own Apache CouchDB server.

<p>For my purposes, I can install CouchDB on my local machine, develop my data repository locally, and push it all to the cloud by replicating my local database to IrisCouch and changing the base URL to use that for all interaction.


<a name="6"></a>

<h4>Relax &ndash; with DreamSeat</h4>

<p>While I explored the theory, my colleague

<a href="http://adndevblog.typepad.com/autocad/philippe-leefsma.html">
Philippe Leefsma</a> went

ahead and implemented a pair of .NET applications uploading and consuming cloud-based data from an IrisCouch-hosted CouchDB database using the

<a href="https://github.com/vdaron/DreamSeat">
DreamSeat</a> CouchDB .NET wrapper library.

<p>Although the DreamSeat documentation boasts support for both complete synchronous and asynchronous API, Philippe used Visual Studio 2012 and its .NET 4.5 async support that automatically and transparently implements the entire support for async call-back.
'Async' methods can use the 'await' keyword, so he wrote a couple of anync wrapper methods for standard synchronous DreamSeat calls.

<p>Well, that provides lots of material to play with in the immediate future, and gives me hope of easily implementing my cloud-based data repository requirements.</p>

<p>Here are a couple of other more directly Revit API related notes:</p>


<a name="7"></a>

<h4>ID and GUID in Revit Documents</h4>

<!-- <p>Another note before closing:</p> -->

<p><strong>Question:</strong> A short question about the way unique ID’s are managed in Revit.
I want to export a large number of RVT models through DB link to a single database and I really need to have unique ID’s in my destination tables.
So far what I’ve seen is that the records pushed to my database have a field ID which seems to be unique within each Revit file, but not with my set of files.

<p>So is there a way to have really unique identifier like a GUID instead of simple ID in my RVT models?
Or at least is there a way to rely on a kind of GUID when we push data through DB link?</p>

<p><strong>Answer:</strong> Each Revit element has an ID property, its element id, which is unique within the RVT document, but not globally.

<p>Each Revit element also has a UniqueId property, which is globally unique, unless you

<a href="http://thebuildingcoder.typepad.com/blog/2012/08/titbits-of-the-week.html#2">
do something to sabotage that</a>.

<p>Under normal circumstances, the UniqueId should fulfil your needs.


<a name="8"></a>

<h4>Visual Revit Programming with Dynamo</h4>

<p>One last, final note before closing: if you are interested in a visual programming environment for Revit which allows non-programmers to create workflows to automate Revit functionality and geometry creation, be sure to check out

<a href="https://github.com/ikeough/Dynamo">
Dynamo</a>, also featured at

<a href="http://www.AutodeskVasari.com">
AutodeskVasari.com</a>.




<hr>

<h1>Cloud and Mobile</h1>

<h3>Relax &ndash; Simple Free Cloud Based Data Repository with NoSQL, CouchDB, and IrisCouch</h3>

<!-- <p style="text-align: right"><i> -->

<p>By

<a href="http://adndevblog.typepad.com/cloud_and_mobile/jeremy-tammik.html">
Jeremy</a>

<a href="http://thebuildingcoder.typepad.com/blog/about-the-author.html">
Tammik</a>.</i></p>

<p>I searched for a simple cloud-based data repository option and found one that seems simpler and more transparent than the Microsoft Azure and Amazon solutions discussed here so far:

<a href="http://thebuildingcoder.typepad.com/blog/2013/03/relax-simple-free-cloud-based-data-repository-with-nosql-couchdb-and-iriscouch.html">
NoSQL, CouchDB, and IrisCouch</a>.

<p>Check it out, and please let us know what you think of this alternative!</p>
