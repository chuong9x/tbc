<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="bc.css">
<script src="http://thebuildingcoder.typepad.com/google-code-prettify/run_prettify.js"></script>
</head>

<!--

http://adndevblog.typepad.com/cloud_and_mobile/2014/10/free-webinar-introducing-the-new-autodesk-view-and-data-api-.html

Free Webinar - Introducing the new Autodesk View and Data API

-->

<h3>ADVA Webinar, Free Student Software and AU</h3>

<p>Here are pointers to some relevant non-API news items of interest:</p>

<ul>
<li><a href="#2">Free webinar introducing the new Autodesk View and Data API</a></li>
<li><a href="#3">Free Autodesk software for all students everywhere</a></li>
<li><a href="#4">AU class enrolment</a></li>
</ul>


<a name="2"></a>

<h4>Free Webinar &ndash; Introducing the new Autodesk View and Data API</h4>

<p>We already held a webinar on the new Autodesk View and Data API in September.</p>

<p>Here are the old

<a href="http://thebuildingcoder.typepad.com/blog/2014/09/autodesk-view-and-data-api-webinar.html#3">
description and full details</a> of that, and, for the first time, we proudly present the

<a href="zip/2014-09-18_adva_webcast_notes.pdf">
detailed notes of the September presentations</a> by Stephen Preston and Cyrille Fauvel.</p>

<p>In case you missed it, another chance is coming up again soon: the next free webinar

<a href="http://adndevblog.typepad.com/cloud_and_mobile/2014/10/free-webinar-introducing-the-new-autodesk-view-and-data-api-.html">
Introducing the new Autodesk View and Data API</a> will

be held on Thursday October 23<sup>rd</sup>, 2014.</p>



<a name="3"></a>

<h4>Free Autodesk Software for All Students Everywhere</h4>

<p>Autodesk now provides free software for students, teachers, and schools around the world.</p>

<p>Inspiring creativity and a love for science, engineering, and math in young students is more important today than ever.  So I'm very happy to announce that Autodesk has opened up FREE access to its desktop software to ALL students, teachers, and schools everywhere in the world.</p>

<p>In the past, access was free in some countries, but not others.  Today there are no restrictions.  However, all too often students and teachers are unaware that they can have their own copy and use our software in their classroom for free.  The simplest way to help a student or teacher is to direct them to

<a href="http://www.autodesk.com/education/home">
students.autodesk.com</a> where

they can download as much as they want and find curriculum and learning materials.</p>



<a name="4"></a>

<h4>AU Class Enrolment</h4>

<p>I mentioned the Revit API expert panel

<a href="https://events.au.autodesk.com/connect/sessionDetail.ww?SESSION_ID=5156">
SD5156 &ndash; Open House on the Factory Floor</a> taking place at Autodesk University.</p>

<center>
<img src="img/AU14-Speaker-275x250.png" alt="Autodesk University 2014" width="275"/>
</center>

<p>A few of my fellow ADN colleagues' class enrolments are currently below the attendee threshold, however:</p>

<ul>
<li><a href="https://events.au.autodesk.com/connect/sessionDetail.ww?SESSION_ID=6310"><strong>SD6310</strong></a> &ndash; Bring on the Cloud and Mobilize Your Media &amp; Entertainment Workflows Through Programming &ndash; Kevin Vandecar</li>
<li><a href="https://events.au.autodesk.com/connect/sessionDetail.ww?SESSION_ID=6432"><strong>SD6432</strong></a> &ndash; Are You Having a Pythonic 3ds Max Experience? No? Come Join the Revolution! &ndash; Kevin Vandecar</li>
<li><a href="https://events.au.autodesk.com/connect/sessionDetail.ww?SESSION_ID=5752"><strong>SD5752</strong></a> &ndash; OAuth 1.0 Versus OAuth 2.0 and Use Case &ndash; Cyrille Fauvel</li>
<li><a href="https://events.au.autodesk.com/connect/sessionDetail.ww?SESSION_ID=6230"><strong>SD6230</strong></a> &ndash; Add 3D Photogrammetry to Your Desktop and Mobile Apps using ReCap Photo API &ndash; Philippe Leefsma</li>
<li><a href="https://events.au.autodesk.com/connect/sessionDetail.ww?SESSION_ID=5931"><strong>SD5931</strong></a> &ndash; Creating Commercial Applications for Mobile Devices Using AutoCAD OEM &ndash; David Grieve</li>
</ul>

<p>If these classes are of interest to you, please register for them to ensure they really take place.</p>

<p>You can check the

<a href="https://events.au.autodesk.com/connect/dashboard.ww">
AU 2014 class catalogue</a> for

the complete list of classes.</p>

<hr/>

<!--

10015552 [Property 'TrimPlanes' is 'ReadOnly']

http://forums.autodesk.com/t5/net/property-trimplanes-is-readonly/m-p/5287153

http://adndevblog.typepad.com/aec/2012/12/adding-trimplanes-to-structural-members-using-aca-net-api.html

http://adndevblog.typepad.com/aec/2014/10/adding-trimplanes-to-structural-members-using-acanet.html

-->

<h1>AEC DevBlog</h1>

<h3>Adding TrimPlanes to Structural Members using ACA .NET</h3>

<p>By

<a href="http://adndevblog.typepad.com/cloud_and_mobile/jeremy-tammik.html">
Jeremy</a>

<a href="http://thebuildingcoder.typepad.com/blog/about-the-author.html">
Tammik</a>.</p>

<p><strong>Question:</strong> How can I add TrimPlanes to structural members using ACA .NET API?</p>

<p>I tried the

<a href="http://adndevblog.typepad.com/aec/2012/12/adding-trimplanes-to-structural-members-using-aca-net-api.html">
code provided in 2012</a> with little success.</p>

<p>When I try to write to the TrimPlanes property, e.g. like this, it returns a 'ReadOnly'" error:</p>

<pre class="code">
  member.TrimPlanes = trimPlanes
</pre>

<p>Any ideas how to fix this?</p>

<p><strong>Answer:</strong> Basically, the following sample code skeleton should work:</p>

<pre class="code">
&nbsp; trimPlanes= owner.TrimPlanes;
&nbsp;
&nbsp; plane1 = <span class="blue">new</span> TrimPlane();
&nbsp; ...
&nbsp; trimPlanes.Add(plane1);
</pre>

<p>Here is a complete command implementation sample:</p>

<pre class="code">
<style type="text/css">
.cf { font-family: Consolas; font-size: 10pt; color: black; background: white; }
.cl { margin: 0px; }
.cb1 { color: #a31515; }
.cb2 { color: blue; }
.cb3 { color: #2b91af; }
.cb4 { color: green; }
</style>
<div class="cf">
<pre class="cl">&nbsp; &nbsp; &lt;CommandMethod(<span class="cb1">&quot;testmemberTrim&quot;</span>)&gt; _</pre>
<pre class="cl">&nbsp; &nbsp; <span class="cb2">Public</span> <span class="cb2">Sub</span> testmemberTrim()</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> db <span class="cb2">As</span> Database = HostApplicationServices.WorkingDatabase</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> tm <span class="cb2">As</span> Autodesk.AutoCAD.DatabaseServices.TransactionManager = db.TransactionManager</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> trans <span class="cb2">As</span> <span class="cb3">Transaction</span> = tm.StartTransaction()</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> ed <span class="cb2">As</span> Editor = Application.DocumentManager.MdiActiveDocument.Editor</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; <span class="cb2">Try</span></pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> member <span class="cb2">As</span> Member = <span class="cb2">New</span> Member()</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; member.MemberType = MemberType.Column</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; member.SetDatabaseDefaults(db)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; member.SetToStandard(db)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb4">' Set the start and end point of Member in WCS</span></pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; member.Set(<span class="cb2">New</span> Point3d(0.0, 0.0, 0.0), <span class="cb2">New</span> Point3d(5000.0, 0.0, 0.0))</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb4">' create a trim plane at the start</span></pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> ptOrigin <span class="cb2">As</span> Point3d = <span class="cb2">New</span> Point3d(1.0, 1.0, 1.0)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> vec <span class="cb2">As</span> Vector3d = <span class="cb2">New</span> Vector3d(1, 0, 0)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> tp1 <span class="cb2">As</span> TrimPlane = <span class="cb2">New</span> TrimPlane()</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; tp1.SubSetDatabaseDefaults(db)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; tp1.SetToStandard(db)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; tp1.End = TrimPlaneFrom.Start</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; tp1.Plane = <span class="cb2">New</span> <span class="cb3">Plane</span>(ptOrigin, vec.GetNormal())</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; member.TrimPlanes.Add(tp1)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb4">' create another trim plane at the end</span></pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> tp2 <span class="cb2">As</span> TrimPlane = <span class="cb2">New</span> TrimPlane()</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; tp2.SubSetDatabaseDefaults(db)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; tp2.SetToStandard(db)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; tp2.End = TrimPlaneFrom.End</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; tp2.Plane = <span class="cb2">New</span> <span class="cb3">Plane</span>(ptOrigin, vec.GetNormal())</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; member.TrimPlanes.Add(tp2)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> blkTbl <span class="cb2">As</span> BlockTable = trans.GetObject(db.BlockTableId, <span class="cb3">OpenMode</span>.ForRead)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; <span class="cb2">Dim</span> ms <span class="cb2">As</span> BlockTableRecord = trans.GetObject(blkTbl(BlockTableRecord.ModelSpace), <span class="cb3">OpenMode</span>.ForWrite)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; ms.AppendEntity(member)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; trans.AddNewlyCreatedDBObject(member, <span class="cb2">True</span>)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; trans.Commit()</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; <span class="cb2">Catch</span></pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; MsgBox(<span class="cb1">&quot;\nMember creation failed&quot;</span>)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; trans.Abort()</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; <span class="cb2">Finally</span></pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; MsgBox(<span class="cb1">&quot;\nMember created!&quot;</span>)</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; &nbsp; trans.Dispose()</pre>
<pre class="cl">&nbsp; &nbsp; &nbsp; <span class="cb2">End</span> <span class="cb2">Try</span></pre>
<pre class="cl">&nbsp; &nbsp; <span class="cb2">End</span> <span class="cb2">Sub</span></pre>
</div>
</pre>

<center>
<img src="img/column_trim_planes.png" alt="Column trim planes"/>
</center>
