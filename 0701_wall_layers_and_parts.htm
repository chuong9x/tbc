<head>
<link rel="stylesheet" type="text/css" href="bc.css">
</head>

<!-- 

From: Saikat Bhattacharya 
Sent: 19 December 2011 23:31
To: Revit API
Subject: Accessing the wall component structure function after it has been converted to parts

An ADN partner wants to access the wall parts which had the component structure function such as Structure or Membrane before the wall was converted into parts. 

What I found out was that once we create parts, the information related to the CompoundStructureLayer of a wall on whether it was of a Structure or Membrane function does not get carried over into the parts. So as a workaround, I was thinking of creating a list of the CompoundStructureLayers of a wall before it is converted to parts and store the material/width etc of the CompoundStructureLayer. Then after parts are created from the wall, access each part and search for the material/width of the parts and map the these with that of the list and then we might know which part had the function Structure or Member when it was a CompoundStructureLayer.

From: Jeremy Tammik 
Sent: 19 December 2011 23:34
To: Saikat Bhattacharya
Cc: Revit API
Subject: RE: Accessing the wall component structure function after it has been converted to parts

can't you do the inverse, undo the parts splitting in a temporary transaction to access the layer info whenever you need it?

then there is no need to store and synchronise any additional info.

... actually, don't the original elements continue existing just as before even after the part creation, so you can just access the original element and its compound structure from the part?

From: Saikat Bhattacharya 
Sent: Monday, December 19, 2011 8:01 PM
To: Jeremy Tammik; Revit API
Subject: FW: Accessing the wall component structure function after it has been converted to parts

Thanks Jeremy. So this can eliminate the need to store the layer structure but the main problem still remain. Let me explain this better - 

We have a wall with say 2 layers (let's call them - layer 1 and layer 2). Now user created parts from it and so we have part named 1 and part named 2. Now from part 1, I can access the wall that it was created from and the wall contains all the layers. So far, so good. But the task here is to find which part corresponds to the layer whose function parameter is say Membrane before it was converted into parts. How do we know which part was created from which layer. I was thinking of using material, width etc to do the check but if we have multiple layers with same material and same width (or even volume), is there a way to make this mapping foolproof. 

And also, some parts can be further subdivided into say horizontal parts (which will add another level of complexity to this).

From: Scott Conover 
Sent: 20 December 2011 04:07
To: Saikat Bhattacharya; Jeremy Tammik; Revit API
Subject: RE: Accessing the wall component structure function after it has been converted to parts

Saikat -

It should be possible to find the location of any layer.

1.	Remember that the Wall.LocationLine is always the center of the wall, regardless of the layer structure.
2.	Use CompoundStructure.GetOffsetForLocationLine to find other locations (CoreBoundary, FinishBoundary)
And/or
3.	Use CompoundStructure.GetLayerWidth to walk the layers in order. 
And/or
4.	Use ray tracing (FindReferencesByDirectionWithContext in 2012, ReferenceIntersector in 2013) to find parts in order.

For vertically compound structures, there is more work to be done.  

It's also important to remember that 0-width membrane layers do not generate parts.

-->

<h3>Identifying Wall Compound Layers and Parts</h3>

<p>We recently looked at how to determine the exact geometry and wall 

<a href="http://thebuildingcoder.typepad.com/blog/2011/10/retrieving-detailed-wall-layer-geometry.html">
join points of compound layer geometry</a> subcomponents by temporarily creating separate parts from the wall. 

Here is another interesting question the correlation between the wall compound layers and its ensuing parts:

<p><strong>Question:</strong> I have split my wall into parts, and now I would like to determine which of the resulting parts correspond to the component structure layers with certain functions such as Structure or Membrane.

<p>Once the parts have been created, the CompoundStructureLayer information is apparently lost. As a workaround, I was thinking of creating a list of the compound structure layers before converting the wall to parts and storing their materials, width etc.
After the parts are created, I hoped to access each part, search for their material and width, and map these to the list I saved in order to know which part originally had which function.

<p>I am hoping that there is a better way to achieve this, since this approach has multiple limitations.

<p>As a simple example, let's assume we have a wall with two layers, layer 1 and layer 2. 
After creating parts from it, we have parts named 1 and 2. 
From part 1, I can access the wall that it was created from, and the wall contains all the original layers. 
So far, so good. 
Now the task here is to find which part corresponds to the layer whose function parameter is say Membrane before it was converted into parts. 
How do I know which part was created from which layer?
I was thinking of using material, width etc. to do the check, but if we multiple layers have the same material and width, and possibly even volume, how can I make this mapping foolproof?

Furthermore, some parts may be further subdivided into say horizontal parts, which will add another level of complexity to the problem.

<p><strong>Answer:</strong> It should be possible to find the location of any layer.

<ol>
<li>Remember that the wall location line is always the centre of the wall, regardless of the layer structure,
<li>Use CompoundStructure.GetOffsetForLocationLine to find other locations such as CoreBoundary, FinishBoundary, etc., and/or
<li>Use CompoundStructure.GetLayerWidth to walk the layers in order, and/or
<li>Use the FindReferencesByDirectionWithContext ray tracing method to find the wall parts in order.
</ol>

<p>For vertically compound structures, there is more work to be done, as you pointed out.  

<p>It is important to remember that zero width membrane layers do not generate parts.
