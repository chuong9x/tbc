<head>
<link rel="stylesheet" type="text/css" href="bc.css">
</head>

<!-- 07468937 [Line.Origin not equal to Line.get_EndPoint()?] -->

<h3>UR1 and Line Origin versus Start and End Point</h3>

<p>My official vacation time has begun.
I still have rather a backlog of important, pending, almost completed projects, unanswered blog comments, and unavoidable meetings, so I will be online now and then in spite of that.

<p>I also want to keep us all updated on important little titbits such as the UR1:


<a name="1"></a>

<h4>Revit 2013 Update Release 1</h4>

<p>The Revit 2013 Update Release 1 is now available for download and installation from the web and within the product through Communication Center.  
Here are links to the appropriate update pages:

<ul>
<li><a href="http://usa.autodesk.com/adsk/servlet/ps/dl/item?siteID=123112&id=20121968&linkID=16831210">Revit 2013 UR1</a>
<li><a href="http://usa.autodesk.com/adsk/servlet/ps/dl/item?id=20121970&siteID=123112&linkID=9273944">Revit Architecture 2013 UR1</a>
<li><a href="http://usa.autodesk.com/adsk/servlet/ps/dl/item?id=20122070&siteID=123112&linkID=12828318">Revit MEP 2013 UR1</a>
<li><a href="http://usa.autodesk.com/adsk/servlet/ps/dl/item?id=20122015&siteID=123112&linkID=9280927">Revit Structure 2013 UR1</a>
</ul>

<p>The build identifier is 20120716_1115.

<p>Here is a list of the API enhancements implemented in this update:

<ul>
<li>Allows Document.PostFailure to be used to post multiple errors during a single transaction that do
not reference an ElementId.
<li>Improves stability using UIApplication.DoDragDrop when a Revit command (such as the Wall
tool) was active.
<li>Improves stability by disabling keyboard shortcuts (except view zoom shortcuts) when a
PreviewControl is active.
<li>Improves stability in ReferenceIntersector.FindNearest() when no matching target pick is found.
<li>Corrects validation logic to allow NewFamilyInstance to place face-based families on transformed
family instances.
<li>Dimension.Above and Dimension.Below now update the dimension after their data is changed
without requiring any user action.
<li>The properties MechanicalSystem.SystemType, ElectricalConnector.SystemType,
PipeConnector.SystemType are obsolete in Revit 2013. Instead query the parameter
RBS_DUCT_CONNECTOR_SYSTEM_CLASSIFICATION_PARAM on ConnectorElement.
<li>Corrects data reported with ConnectorManager.UnusedConnectors.
<li>Fixes a file corruption that could occur when extensible storage data was added to an element in
a central file.
<li>Improves stability when saving a file with extensible storage data that overwrites an existing file
that also contains extensible storage.
<li>RVT Links created with RevitLinkType.Create will remain loaded when the RVT containing the
link is reopened.
<li>Previously, setting 'suppressBendRadius' to true in method Rebar.GetCenterlineCurves() would
cause both fillet bends and user-drawn, parameterized arcs to be omitted from the collection of
curves returned by the method. The method now omits only the fillet bends; the drawn arcs are
included along with the straight edges.
<li>Updates Rebar.GetCenterlineCurves() method with an additional argument: a MultiplanarOption
(enum), which should be set to IncludeAllMultiplanarCurves or IncludeOnlyPlanarCurves. This
argument controls whether all curves of a multi-planar Rebar instance are returned, or only those
which lie in the primary plane.
<li>Enables method Rebar.ComputeDrivingCurves(). This method returns a collection of curves that
includes the lines and arcs that drive the shape, but excludes fillets and hooks. It is equivalent to
calling GetCenterlinCurves(adjustForSelfIntersection=false, suppressHooks=true,
suppressBendRadius=true, multiplanarOption=IncludeOnlyPlanarCurves)
<li>Improvements have been made in RebarShape methods that deal with matching RebarShapes to
collections of curves: CreateFromCurvesAndShape(), RebarShapeMatchesCurvesAndHooks().
<li>Corrects behavior ot RebarShape.Create() method to not ignore the out-of-plane bend diameter
specified in the RebarShapeMultiplanarDefinition argument object, and always used an internal
default value.
</ul>



<p>Meanwhile, here is a neat little interesting and basic geometrical Revit API question that arose last week:


<a name="2"></a>

<h4>Relationship of Line Origin, Start and End Point</h4>

<p><strong>Question:</strong> When examining the AnalyticalSurface of a floor in my sample model, I noticed that the Origin property of a certain Line instance is not equal to either of its end points returned by the EndPoint property (get_EndPoint method in C#).

<p>Until now, I had assumed that the Origin property of a line is always equal to one of its end points.

<p>Could you please clarify:

<ol type="a">
<li>What exactly is the definition of a line's Origin property?
<li>How does the line origin relate to its end points?
</ol>


<p><strong>Answer:</strong> I already presented some basic facts on the Revit API 

<a href="http://thebuildingcoder.typepad.com/blog/2010/01/curves.html">
lines, curves</a> and their

<a href="http://thebuildingcoder.typepad.com/blog/2010/01/curve-parameterisation.html">
parameterisations</a> from 

Scott Conover's AU 2009 class on

<a href="http://thebuildingcoder.typepad.com/blog/2010/01/analyse-building-geometry.html">
analysing building geometry</a>,

which he has continued updating, most recently for the 

<a href="http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-one.html#4">AEC DevCamp 2012</a>

(<a href="http://thebuildingcoder.typepad.com/blog/2012/06/obj-model-exporter-take-one.html#2">finalised material</a>).

<p>To answer your questions directly:

<ol type="a">
<li>The line origin and direction define the location of the infinite unbounded line. 
The start and end point of the bounded line can lie anywhere along this line.

<li>The origin always lies somewhere on the infinite unbounded line. 
There is no guarantee that it will coincide with either the start or end point of the bounded line, though.
The origin of a bounded line may even lie outside the bounded part of the infinite line.
</ol>

<p>I hope this helps clarify things.

<p>Anyway, now I'm off to the sunny 

<a href="http://en.wikipedia.org/wiki/Provence">
Provence</a>!
