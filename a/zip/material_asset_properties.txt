        private void GetElementMaterialInfo(UIApplication uiApplication)
        {
            Document document = uiApplication.ActiveUIDocument.Document;
            FilteredElementCollector collector = new FilteredElementCollector(document).WhereElementIsNotElementType()
                .OfClass(typeof(Autodesk.Revit.DB.Material));

            try
            {
                foreach (Autodesk.Revit.DB.Material material in collector)
                {
                    if (material.Name.Equals("Air"))
                    {   
                        AppearanceAssetElement appearanceElement = document.GetElement(material.AppearanceAssetId) as AppearanceAssetElement;                        
                        Asset appearanceAsset = appearanceElement.GetRenderingAsset();
                        List<AssetProperty> assetProperties = new List<AssetProperty>();
                        PropertySetElement physicalPropSet = document.GetElement(material.StructuralAssetId) as PropertySetElement;
                        PropertySetElement thermalPropSet = document.GetElement(material.ThermalAssetId) as PropertySetElement;
                        ThermalAsset thermalAsset = thermalPropSet.GetThermalAsset();
                        StructuralAsset physicalAsset = physicalPropSet.GetStructuralAsset();
                        ICollection<Parameter> physicalParameters = physicalPropSet.GetOrderedParameters();
                        ICollection<Parameter> thermalParameters = thermalPropSet.GetOrderedParameters();
                        
                        //Appearance Asset
                        for (int i = 0; i < appearanceAsset.Size; i++)
                        {
                            AssetProperty property = appearanceAsset[i];
                            assetProperties.Add(property);
                        }
                        foreach (AssetProperty assetProp in assetProperties)
                        {
                            Type type = assetProp.GetType();
                            object assetPropValue = null;
                            var prop = type.GetProperty("Value");
                            if (prop != null && prop.GetIndexParameters().Length == 0)
                            {
                                assetPropValue = prop.GetValue(assetProp);
                            }
                        }
                        //Physical (Structural) Asset
                        foreach (Parameter p in physicalParameters)
                        {
                            //Work with parameters here
							//The only parameter not in the orderedParameters that is needed is the Asset name.  Which you can get by 'physicalAsset.Name'.
                        }

                        ////Thermal Asset
                        foreach (Parameter p in thermalParameters)
                        {
                            //Work with parameters here
							//The only parameter not in the orderedParameters that is needed is the Asset name.  Which you can get by 'thermalAsset.Name'.
                        }
                         
                    }
                    
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.ToString());
            }
		}