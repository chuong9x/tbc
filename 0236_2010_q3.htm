<head>
<link rel="stylesheet" type="text/css" href="bc.css">
</head>

<h3>Revit 2010 Subscription Pack</h3>

<p>The

<a href="http://www.autodesk.com/pr-advantagepacks">
Autodesk Subscription Advantage Packs</a> have been released,

including ones for Autodesk Revit Architecture, MEP and Structure 2010.
English versions are now available for download on

<a href="http://www.autodesk.com/subscriptionlogin">
Subscription Center</a>.

<p>ADN members also have access to the subscription center by going to the

<a href="http://adn.autodesk.com/adn/servlet/index?siteID=4814862&id=5396918">ADN home page</a> and selecting

<a href="http://adn.autodesk.com/adn/servlet/item?siteID=4814862&id=11950902">Autodesk Subscription Center</a>.

<!--

English: subpartner@autodesk.com
French: subpartner-fra@autodesk.com
Italian: subpartner-ita@autodesk.com
German: subpartner-deu@autodesk.com
Portuguese (Brazilian): subpartner-ptb@autodesk.com
Spanish: subpartner-esp@autodesk.com
Japanese: subpartner-jpn@autodesk.com
Korean: subpartner-kor@autodesk.com
Chinese Simplified: subpartner-chs@autodesk.com
Chinese Traditional: subpartner-cht@autodesk.com
Password: subpartner

https://autodesk.subscribenet.com/control/adsk/index

-->

The subscription pack is also available directly from the

<a href="http://adn.autodesk.com/adn/servlet/index?siteID=4814862&id=5017413&linkID=4901650">ADN Revit download</a> page.

Look there for the

<a href="http://adn.autodesk.com/adn/servlet/item?siteID=4814862&id=13910658&linkID=4901650">Autodesk Revit 2010 September/October update</a>.

<p>The Revit 2010 subscription packs provide the same minor fixes and enhancements and the

<a href="http://thebuildingcoder.typepad.com/blog/2009/10/revit-2010-web-update-2.html">
web update 2</a> plus

significant additional new features.


<p>The subscription pack also includes some API enhancements and is therefore accompanied by an updated SDK as well, which we explore below.
First let's look at the updated product and documentation:

<ul>
<li><a href="#1">Product and Documentation</a></li>
<li><a href="#2">Revit API Enhancements</a></li>
</ul>

<a name="1"></a>

<h4>Product and Documentation</h4>

<p>Since there are three different flavours of the subscription pack for Architecture, MEP and Structure, and each of these has its own 'what's new' documentation and is available both for 32 and 64 bit operating systems, the whole release adds up to this list of nine files:

<ul>
<li>autodesk_revit_architecture_2010_subscription_update_x64_enu.exe (exe - 98730 Kb)
<li>autodesk_revit_architecture_2010_subscription_update_x86_enu.exe (exe - 72037 Kb)
<li>whatsnew_architectureq3.pdf (pdf - 2778 Kb)
<li>autodesk_revit_mep_2010_subscription_update_x64_enu.exe (exe - 98727 Kb)
<li>autodesk_revit_mep_2010_subscription_update_x86_enu.exe (exe - 72035 Kb)
<li>whatsnew_mepq3.pdf (pdf - 2789 Kb)
<li>autodesk_revit_structure_2010_subscription_update_x64_enu.exe (exe - 98734 Kb)
<li>autodesk_revit_structure_2010_subscription_update_x86_enu.exe (exe - 72042 Kb)
<li>whatsnew_structureq3.pdf (pdf - 1654 Kb)
</ul>

<p>All changes in the web update are also provided in the subscription release, so it is a true superset of the former.

<p>Analogously to the web update, the three separate what's new documents list the enhancements provided both by the subscription pack products and the updated API.

<p>One of the user interface enhancements which is new in the subscription release pack is the keyboard shortcut feature, which might prove extremely useful to application developers:

<span style="color:darkblue">

<h4>Keyboard Shortcuts</h4>

<p>The subscription release of Revit provides an easy-to-use interface for managing keyboard shortcuts for Revit tools. With this interface, you can

<ul>
<li>Add keyboard shortcuts. You can assign multiple shortcuts for each Revit tool.
<li>Remove keyboard shortcuts.
<li>Import keyboard shortcuts from another user. Also use this function to migrate shortcuts from a previous
release.
<li>Export keyboard shortcuts to share them with other users, or to use the resulting file in a spreadsheet
program, where you can sort, organize, and print a list of shortcuts for quick reference.
</ul>

</span>

<p>I received feedback from a developer who was driving a Revit 2009 add-in and its external commands using Windows messages.
When the Revit 2010 user interface moved to the ribbon paradigm, this approach no longer worked and he was unable to support the new version.
The new keyboard shortcuts effectively resolve this problem and external commands can now be launched programmatically.
This leads us back to the API enhancements:


<a name="2"></a>

<h4>Revit API Enhancements</h4>

<p>The subscription pack includes enhancements to the Revit API and an updated SDK.
There are now separate versions of the SDK for the web update and the subscription releases, which are both available from the public

<a href="http://www.autodesk.com/developrevit">
Revit developer site</a> and also from the members-only ADN pages:

<ul>
<li>Revit 2010 SDK Update Release 2 (exe - 82402 Kb)
(<a href="http://adn.autodesk.com/adn/servlet/file/revit2010sdkupdaterelease2.exe?siteID=4814862&id=13898701">ADN</a>)
</li>

<li>Revit 2010 SDK Subscription Release (exe - 82464 Kb)
(<a href="http://adn.autodesk.com/adn/servlet/file/revit2010sdksubscriptionreleasepack.exe?siteID=4814862&id=13898729">ADN</a>)
</li>

</ul>

<p>The new API functionality is described in the file 'Revit Platform API Changes and Additions.doc'.
The help file RevitAPI.chm file also reflects these changes.
The subscription release has the same changes as the web update, plus additional APIs.

<h4>Revit SDK Differences</h4>

<p>I analysed the differences between the initial release of the Revit SDK and the two new updated versions provided with the web update 2 and the subscription pack:

<ul>
<li>revit2010sdksubscriptionreleasepack.exe &ndash; 84,443,139 bytes
<li>revit2010sdkupdaterelease2.exe &ndash; 84,380,018 bytes
</ul>

<p>The two SDKs are identical, except for three files:

<ul>
<li>Read me first.doc &ndash; minimal changes.
<li>Revit platform API changes and additions.doc &ndash; significant informative differences.
<li>RevitAPI.chm &ndash; different.
</ul>

<p>The changes and additions document calls out the improvements made.

<p>We already discussed the

<a href="http://thebuildingcoder.typepad.com/blog/2009/10/revit-2010-web-update-2.html#2">
web update 2 API enhancements</a>, e.g.

<ul>
<li>Rename and replace a family parameter.
<li>Extract GUID from a parameter.
<li><a href="http://thebuildingcoder.typepad.com/blog/2009/10/revit-2010-web-update-2.html#3">
Improved stability of DocumentOpened event</a>.
</ul>

<p>The subscription pack release includes these as well as the following:

<ul>
<li>Export model to IFC.
<li>Floor slope and elevation.
<li>NewTruss() in Revit Architecture.
<li>Export - 24-bit colour option in export to AutoCAD file formats.
<li>Validation in ElectricalSystem properties.
<li><a href="#4">SuspendUpdating applies to Parameter.Set</a>.</li>
</ul>

<p>The sample applications provided in the updates are virtually identical to the ones in the original release of the SDK.

<p>Regarding the SDK backward compatibility, the same applies as for the

<a href="http://thebuildingcoder.typepad.com/blog/2009/10/revit-2010-web-update-2.html">
web update 2</a>:

<p>Both the web update 2 release and the subscription pack provide a few new API calls.
The API is compatible between all versions as long as the new calls are not accessed.
You need ensure that the user has installed and is using the subscription release before using any of the new calls.



<a name="4"></a>

<h4>SuspendUpdating applies to Parameter.Set and Plug-in Backward Compatibility</h4>

<p>In the subscription pack release of the Revit SDK, the SuspendUpdating class has a new constructor which will cause Parameter.Set not to update the entire building model every time a single parameter on an individual element is modified.
This affects all instance parameters defined in families, when the parameter value is modified on the inserted family instances.
We have seen speed improvements where a processing time of 5 minutes is reduced to 15 seconds to change 100 parameters on one single element, and the effect is probably similar when changing a single parameter on 100 different elements.

<p>An application taking advantage of the new functionality will be incompatible with the initial release of Revit 2010 and will only compile with the newer API.
An application created for the  initial release of Revit 2010 will obviously still run, but will not be able to take advantage of this enhancement.
You might be able to build an application which will both run on the initial version and also take advantage of the new functionality by using reflection to check at runtime whether the new API call is available at all.
You could also query the build number to decide whether to use reflection to try to find the new method.


<!--

  SPR #155050 [Definition class returned from Parameter.Definition for shared Parameter is InternalDefinition]
  I see a comment saying "Fix submitted to Q3 branch in changelist 185033".


<h4>Obtain ExternalDefinition from Shared Parameter Definition Property</h4>

<p>Every parameter in Revit has a parameter definition associated with it which defines certain shared characteristics of all instances of the same parameter, such as its name and data type, so the individual parameter instance just has to keep track of its own value.
The parameter definition is represented by the generic Definition class.
This class actually has two derived classes ExternalDefinition and InternalDefinition which are used for shared and non-shared parameters, respectively.
The InternalDefinition class provides some additional properties that are not available for shared parameters, and vice versa.

<p>Here is the one property only available for an internal definition:

<ul>
<li>BuiltInParameter: identifies if the parameter is built-in.
</ul>

<p>These are the corresponding properties only available for external definitions:

<ul>
<li>GUID, the GUID associated with the shared parameter definition.
<li>OwnerGroup, the external parameter definition group ID.
<li>Visible: determine whether the parameter is visible in the user interface.
</ul>

<p>Both types share the following properties:

<ul>
<li>IsReadOnly identifies if the object is read-only or modifiable.
<li>Name, the user-visible parameter name.
<li>ParameterGroup, the parameter definition group ID.
<li>ParameterType, the user-visible interpretation of the parameter data.
</ul>

<p>The Parameter class has a property named Definition to query a parameter for its definition.
For a shared parameter, you would obviously expect this to return an external definition.
Unfortunately, that was not the case, until now.
This problem has been resolved in the subscription pack.
The Definition class returned by the Parameter.Definition property for a shared parameter is now ExternalDefinition, just as you would expect.

-->
