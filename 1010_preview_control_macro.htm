<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="bc.css">
<script src="http://thebuildingcoder.typepad.com/google-code-prettify/run_prettify.js"></script>
</head>

<!--

08694536 [Preview Control]
Stephen Faust, Revolution Design

-->

<h3>Issue Using a Preview Control in a Macro</h3>

<p>Here is a recent surprising little issue on using the Revit PreviewControl widget in the macro environment, brought up by Stephen Faust of

<a href="http://www.revolutiondesign.biz">Revolution Design</a>:

<p><strong>Question:</strong> I would like to use the preview control to display previews of parts of the model.</p>

<p>However, whenever I try to create a preview control it gives me the error "Revit does not support more than one preview control and there is already one active":</p>

<center>
<img src="img/sf_revit_error.jpg" alt="Revit error" width="600"/>
</center>

<p>I have searched online and I found the UI sample in the SDK as well as

<a href="http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#2">
your class</a> on

this.</p>

<p>What I am trying to do to start off is just display the active view in a preview.
Looking at

<a href="http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#23">
your sample</a> it

looks like it just feeds the active document and active view ID to the form and constructs from there.</p>

<p>I just have a WPF window and in the constructor it tries to create a preview control and add it to the children of the main grid with the following code:</p>

<pre class="code">
&nbsp; gd_Main.Children.Add(
&nbsp; &nbsp; <span class="blue">new</span> <span class="teal">PreviewControl</span>(
&nbsp; &nbsp; &nbsp; doc, doc.ActiveView.Id ) );
</pre>

<p>However this gives me the error above.
I'm not sure where mine is different in substance than yours, or where else there might be a preview control active...</p>

<p>What am I missing?</p>


<p><strong>Answer:</strong> Congratulations on creating such a weird problem.</p>

<p>I have never heard of anything similar, nor would I have thought it possible.</p>

<p>You mention that you are aware of the UIAPI PreviewControl SDK and my simplified PreviewControlSimple samples.
Here are pointers to those from the discussion of using a

<a href="http://thebuildingcoder.typepad.com/blog/2012/08/vacation-time-and-various-notes.html#4">
preview control with linked document</a>:</p>

<p>"One if the new

<a href="http://thebuildingcoder.typepad.com/blog/2012/03/revit-2013-and-its-api.html">
Revit 2013 API</a> features is the

<a href="http://thebuildingcoder.typepad.com/blog/2012/03/revit-2013-and-its-api.html#2">
preview control</a>,

supporting enhanced integration between Revit and an add-in.
I presented a minimal sample named

<a href="http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#23">
PreviewControlSimple</a> making

use of it in my DevCamp session on the

<a href="http://thebuildingcoder.typepad.com/blog/2012/06/devcamp-day-two.html#2">
Revit 2013 UI API enhancements</a>,

and a more complete and complex one is given by the

<a href="http://thebuildingcoder.typepad.com/blog/2012/03/new-revit-2013-sdk-samples.html#4">
UIAPI Revit SDK sample</a>."</p>

<p>I would suggest ensuring that you can successfully compile, execute and debug both of these, to ensure that your system is not causing the problem.</p>

<p>Are you sure you dispose properly of every preview control instance you created?</p>

<p>You might be creating one, not disposing it, and then trying to create another...</p>

<p>If the error persists in your add-in once that is done, I would suggest starting again from scratch, debugging regularly, and noting at what point the error occurs.</p>

<p>There is not much more to say.</p>

<p>After all, this is a one-liner, basically.</p>


<p><strong>Response:</strong> I figured this out... ish.</p>

<p>I discovered that it seems to be a problem with creating it in a macro instead of an external command.</p>

<p>Some explanation:</p>

<p>I often test concepts with macros to see how things work or if something is going to work or not especially if it’s a pretty simple concept and doesn’t take a lot of setup. That way I don’t have to keep waiting for Revit to load when I need to debug something, etc. Anyway that is what I was doing here and no matter what I did I got that error.</p>

<p>I did compile the UIAPI command successfully and was able to run in properly so it’s not an issue with my machine or Revit install.</p>

<p>I was tried to figure out what differences in substance there are between the UIAPI example and what I had.
Just to test I created an external command in Visual Studio rather than in a macro.
The code is the same except that external commands have to return a result and apply attributes, etc., and the core is the same exact code.
When I run it in the external command DLL it works just as expected with no error...</p>

<p>So the culprit is the macro environment.</p>

<p>Here is a snapshot of the code in the macro:</p>

<pre class="code">
<span class="blue">public</span> <span class="blue">void</span> PreviewControl()
{
&nbsp; <span class="blue">using</span>( <span class="teal">Transaction</span> t = <span class="blue">new</span> <span class="teal">Transaction</span>(
&nbsp; &nbsp; ActiveUIDocument.Document ) )
&nbsp; {
&nbsp; &nbsp; t.Start( <span class="maroon">&quot;temp&quot;</span> );
&nbsp;
&nbsp; &nbsp; <span class="teal">Wnd_Preview</span> prv=<span class="blue">new</span> <span class="teal">Wnd_Preview</span>(ActiveUIDocument);
&nbsp;
&nbsp; &nbsp; prv.ShowDialog();
&nbsp; &nbsp; t.RollBack();
&nbsp; }
}
&nbsp;
<span class="blue">public</span> <span class="blue">partial</span> <span class="blue">class</span> <span class="teal">Wnd_Preview</span> : Window
{
&nbsp; <span class="blue">public</span> Wnd_Preview( <span class="teal">UIDocument</span> Doc )
&nbsp; {
&nbsp; &nbsp; InitializeComponent();
&nbsp;
&nbsp; &nbsp; gd_Main.Children.Add( <span class="blue">new</span> <span class="teal">PreviewControl</span>(
&nbsp; &nbsp; &nbsp; Doc.Document, Doc.Document.ActiveView.Id ) );
&nbsp; }
}
</pre>

<p>One more minor issue: what I ultimately want to do is create a new view so that I can play with the settings and display without changing the model around. I also want to be able to create the view so that if there is not already a 3D view in the project I can create it &ndash; I will then roll the transaction back so the view doesn’t stay in the users file.</p>

<p>I have a basic mock up of this working.
When I use an actual view already present in the project I can successfully use the view cube in the preview control.
However, when I create my own view, either by duplication or by View3D.CreateIsometric, it works fine, but the view cube is disabled.
I checked and the view is not showing as locked.
What could be causing this?</p>


<p><strong>Answer:</strong> Hah!
I thought the problem might possibly be caused by something strange in the environment.
I am glad that the suggestion to start off by ensuring that the UIAPI sample works all right led in the right direction.</p>

<p>Regarding the disabled view cube:</p>

<p>You say that you are using the

<a href="http://thebuildingcoder.typepad.com/blog/2012/10/the-temporary-transaction-trick-for-gross-slab-data.html">
temporary transaction trick</a>.</p>

<p>Sometimes, though, you need to either regenerate the document, or, even more, commit the transaction, to ensure that the current state actual comes into effect.</p>

<p>This led to Arnost's suggestion to

<a href="http://thebuildingcoder.typepad.com/blog/2012/11/temporary-transaction-trick-touchup.html">
encapsulate the transaction in a transaction group</a>.</p>

<p>That would enable you to commit your temporary transaction within a transaction group, ensuring that the changes take effect, and later discard the entire group, reverting the document back to its unchanged original state.</p>

<p><strong>Response:</strong>

<p>Thanks for the tip on transaction groups; I will give that a shot.</p>

<p>Many thanks to Steve for sharing this!</p>
